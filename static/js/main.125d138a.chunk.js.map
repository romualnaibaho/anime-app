{"version":3,"sources":[" components/header/header.component.tsx"," components/animes/anime-card/anime.card.component.tsx"," components/animes/anime.list.component.tsx"," components/general/pagination/pagination.component.tsx"," components/general/spinner/spinner.component.tsx","hooks/animes/useGetAnimePage.ts","pages/home/home.page.tsx","hooks/animes/useGetAnimeDetail.ts","pages/detail/detail.page.tsx","common/apollo-client.ts"," components/app/app.component.tsx","index.tsx"],"names":["Nav","styled","nav","AppHeader","header","Header","className","to","AnimeCardDiv","div","Image","img","Ul","ul","BasicInfo","Info","AnimeCard","anime","history","useHistory","css","onClick","id","push","src","bannerImage","alt","title","english","native","duration","seasonYear","status","season","episodes","genres","map","genre","index","PostsGrid","animes","Li","li","Pagination","currentPage","totalData","totalPage","onDataReady","mutableCurrentPage","canPrev","canNext","updatePage","newPage","page","SpinnerContainer","spinning","keyframes","SpinnerAnimation","Spinner","GET_ANIMES","gql","Home","useState","setPage","perPage","useQuery","variables","AnimePage","data","loading","useGetAnimePage","Page","media","pageInfo","total","lastPage","GET_DETAIL","Banner","StatusLabel","Title","SubTitle","AddCollectionButton","Detail","parseInt","Media","useGetAnimeDetail","useParams","detailId","displayDate","date","month","year","isAdult","startDate","endDate","description","format","client","ApolloClient","uri","cache","InMemoryCache","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.125d138a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled'\n\nconst Nav = styled.nav`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    padding: 20px 0;\n    background: white;\n    border-bottom: 1px solid #e8e8e8;\n    z-index: 100;\n`\n\nconst AppHeader = styled.header`\n    margin-bottom: 75px;\n`\n\nconst Header: React.FC = () => {\n    return (\n        <AppHeader>\n            <Nav className='d-flex'>\n                <NavLink className='m-auto' to=\"/\">\n                    ANIME LIST\n                </NavLink>\n\n                <NavLink className='m-auto' to=\"/\">\n                    MY COLLECTIONS\n                </NavLink>\n            </Nav>\n        </AppHeader>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Anime } from '../../../common/interfaces/anime.interface';\n\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/css'\n\nconst AnimeCardDiv = styled.div`\n    border-radius: 4px;\n    background: var(--neutral-10, #FFF);\n    border: 1px solid transparent;\n    box-shadow: 0px 2px 15px 0px rgba(48, 48, 48, 0.08);\n    height: 100%;\n`\n\nconst Image = styled.img`\n    height: 110px;\n`\n\nconst Ul = styled.ul`\n    margin-left: 20px;\n    font-size: 12px;\n`\n\nconst BasicInfo = styled.div`\n    font-size: 12px;\n    font-weight: 600;\n`\n\nconst Info = styled.div`\n    font-size: 12px;\n`\n\nconst AnimeCard: React.FC<{ anime: Anime }> = ({ anime }: { anime: Anime }) => {\n    const history = useHistory();\n\n    const goToDetailPage = (id: number) => {\n        history.push(`/detail/${id}`);\n    };\n\n    return (\n        <AnimeCardDiv\n            className={css`cursor: pointer; &:hover{border: 1px solid #e8e8e8}`}\n            onClick={() => goToDetailPage(anime.id)}\n        >\n            <Image className='img-fluid w-100' src={anime.bannerImage} alt=\"\" />\n            <div className=\"p-3\">\n                <p className=\"m-0\">{anime.title.english}</p>\n                <hr className=\"my-1\"/>\n                <p className={css`\n                    font-size: 11px;\n                    color: #979797;\n                `}\n                >{anime.title.native}</p>\n                <BasicInfo>BASIC INFO</BasicInfo>\n                <Info>{anime.duration} minutes / eps</Info>\n                <Info>{anime.seasonYear}</Info>\n                <Info>{anime.status}, {anime.season}, {anime.episodes} episodes</Info>\n\n                <br />\n\n                <Info>GENRES:</Info>\n                <Ul>\n                {\n                    anime.genres.map((genre, index) => {\n                        return (\n                            <li key={index}>{genre}</li>\n                        )\n                    })\n                }\n                </Ul>\n            </div>\n        </AnimeCardDiv>\n    );\n}\n\nexport default AnimeCard;","import React from 'react';\n\nimport { Anime } from '../../common/interfaces/anime.interface';\nimport AnimeCard from './anime-card/anime.card.component';\n\ninterface AnimeListProps {\n    animes: Anime[]\n}\n\nconst PostsGrid: React.FC<AnimeListProps> = ({ animes }: AnimeListProps) => {\n    return (\n        <div className=\"row\">\n            {animes.map(anime => (\n                    <div className=\"col-12 col-md-4 mb-4\" key={anime.id}>\n                        <AnimeCard anime={anime} />\n                    </div>\n                ))}\n        </div>\n    );\n}\n\nexport default PostsGrid;","import React from 'react';\n\nimport styled from '@emotion/styled'\n// import { css } from '@emotion/css'\n\nimport './pagination.component.css'\n\ninterface PaginationProps {\n    currentPage: number,\n    totalData: number,\n    totalPage: number,\n    onDataReady: (data: number) => void\n}\n\nconst Ul = styled.ul`\n    padding: 0;\n`\n\nconst Li = styled.li`\nlist-style-type: none;\n`\n\nconst Pagination: React.FC<PaginationProps> = ({ currentPage, totalData, totalPage, onDataReady }) => {\n    let mutableCurrentPage = currentPage ? currentPage : 0\n\n    /* Functions */\n    const canPrev = (index: number) => {\n        return index >= 1\n    }\n\n    const canNext = (index: number) => {\n        return index <= totalPage\n    }\n\n    const updatePage = (newPage: number) => {\n        mutableCurrentPage = newPage\n        onDataReady(newPage)\n    }\n\n    const handleFirstPage = (page: number) => {\n        if (canPrev(page)) {\n            updatePage(page)\n        }\n    }\n\n    const handleLastPage = (page: number) => {\n        if (canNext(page)) {\n            updatePage(page)\n        }\n    }\n\n    return (\n        <>\n            {\n                totalData > 0 && totalPage > 1 ?\n                <>\n                    <nav>\n                        <Ul className=\"d-flex align-items-center justify-content-right\">\n                            <Li className={canPrev(mutableCurrentPage - 1) ? 'page-item' : 'disabled'}>\n                                <span\n                                    className=\"page-link\"\n                                    onClick={() => handleFirstPage(mutableCurrentPage - 1)}\n                                >\n                                    <em className=\"fa fa-angle-left\"></em>\n                                </span>\n                            </Li>\n                            {\n                                canPrev(1) && mutableCurrentPage > 3 ?\n                                <>\n                                    <Li className=\"page-item\">\n                                        <span\n                                            className=\"page-link\"\n                                            onClick={() => updatePage(1)}\n                                        >\n                                            1\n                                        </span>\n                                    </Li>\n                                </> : <></>\n                            }\n                            {\n                                mutableCurrentPage > 3 ? \n                                <>\n                                    <Li className=\"page-divider\">\n                                        <div\n                                        className=\"page-link\"\n                                        >\n                                        &middot;&middot;&middot;\n                                        </div>\n                                    </Li>\n                                </>:<></>\n                            }\n                            {\n                                canPrev(mutableCurrentPage - 2) ?\n                                <>\n                                    <Li className=\"page-item\">\n                                        <span\n                                            className=\"page-link\"\n                                            onClick={() => updatePage(mutableCurrentPage - 2)}\n                                        >\n                                            { mutableCurrentPage - 2 }\n                                        </span>\n                                    </Li>\n                                </>:<></>\n                            }\n                            {\n                                canPrev(mutableCurrentPage - 1) ?\n                                <>\n                                    <Li className=\"page-item\">\n                                        <span\n                                            className=\"page-link\"\n                                            onClick={() => updatePage(mutableCurrentPage - 1)}\n                                        >\n                                            { mutableCurrentPage - 1 }\n                                        </span>\n                                    </Li>\n                                </>:<></>\n                            }\n                            <Li className=\"page-item active\">\n                                <span className=\"page-link cursor-default\">\n                                { mutableCurrentPage }\n                                </span>\n                            </Li>\n                            {\n                                canNext(mutableCurrentPage + 1) ?\n                                <>\n                                    <Li className=\"page-item\">\n                                        <span\n                                            className=\"page-link\"\n                                            onClick={() => updatePage(mutableCurrentPage + 1)}\n                                        >\n                                            { mutableCurrentPage + 1 }\n                                        </span>\n                                    </Li>\n                                </>:<></>\n                            }\n                            {\n                                canNext(mutableCurrentPage + 2) ?\n                                <>\n                                    <Li className=\"page-item\">\n                                        <span\n                                            className=\"page-link\"\n                                            onClick={() => updatePage(mutableCurrentPage + 2)}\n                                        >\n                                            { mutableCurrentPage + 2 }\n                                        </span>\n                                    </Li>\n                                </>:<></>\n                            }\n                            {\n                                mutableCurrentPage <= totalPage - 3 ?\n                                <>\n                                    <Li className=\"page-divider\">\n                                        <div\n                                            className=\"page-link\"\n                                        >\n                                            &middot;&middot;&middot;\n                                        </div>\n                                    </Li>\n                                </>:<></>\n                            }\n                            {\n                                canNext(totalPage) && mutableCurrentPage <= totalPage - 3 ?\n                                <>\n                                <Li className=\"page-item\">\n                                    <span\n                                        className=\"page-link\"\n                                        onClick={() => updatePage(totalPage)}\n                                    >\n                                        { totalPage }\n                                    </span>\n                                </Li>\n                                </> : <></>\n                            \n                            }\n                            <Li className={canNext(mutableCurrentPage + 1) ? 'page-item' : 'disabled'}>\n                                <span\n                                    className=\"page-link\"\n                                    onClick={() => handleLastPage(mutableCurrentPage + 1) }\n                                >\n                                    <em className=\"fa fa-angle-right\"></em>\n                                </span>\n                            </Li>\n                        </Ul>\n                    </nav>\n                </>:<></>\n            }\n        </>\n    );\n}\n\nexport default Pagination;","import React from 'react';\n\nimport styled from '@emotion/styled'\nimport { keyframes } from '@emotion/react'\n\nconst SpinnerContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n`\nconst spinning = keyframes`\n    0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nconst SpinnerAnimation = styled.div`\n    border: 4px solid rgba(0, 0, 0, 0.3);\n    border-top: 4px solid #3498db;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    animation: ${spinning} 1s linear infinite;\n`\n\nconst Spinner: React.FC = () => {\n  return (\n    <SpinnerContainer>\n      <SpinnerAnimation/>\n    </SpinnerContainer>\n  );\n};\n\nexport default Spinner;","import { gql, useQuery } from \"@apollo/client\";\n\nconst GET_ANIMES = gql`\nquery ($page: Int, $perPage: Int) {\n    Page (page: $page, perPage: $perPage) {\n      pageInfo {\n        total\n        currentPage\n        lastPage\n        hasNextPage\n        perPage\n      }\n      media {\n        id\n        title {\n          english\n          native\n        }\n        status\n        season\n        seasonYear\n        genres\n        episodes\n        duration\n        bannerImage\n      }\n    }\n  }\n`\n\nexport const useGetAnimePage = (page: number, perPage: number) => {\n    const { data, loading } = useQuery(GET_ANIMES, {\n        variables: { page, perPage }\n    });\n\n    return { AnimePage: data, loading };\n}","import React, { useState } from 'react';\n\nimport AnimeList from '../../ components/animes/anime.list.component';\nimport Pagination from '../../ components/general/pagination/pagination.component';\nimport Spinner from '../../ components/general/spinner/spinner.component';\n\nimport { useGetAnimePage } from '../../hooks/animes/useGetAnimePage';\n\nconst Home: React.FC = () => {\n    const perPage = 12;\n\n    const [page, setPage] = useState<number>(1);\n\n    const { AnimePage, loading } = useGetAnimePage(page, perPage);\n\n    const handleDataFromChild = (data: number) => {\n        setPage(data);\n      };\n\n    return (\n        <div className=\"position-relative\">\n            <div className=\"container\">\n                {\n                    !loading ?\n                    <>\n                        <AnimeList animes={AnimePage?.Page?.media || []} />\n                        <Pagination\n                            currentPage={page}\n                            totalData={AnimePage?.Page?.pageInfo?.total || 0}\n                            totalPage={AnimePage?.Page?.pageInfo?.lastPage}\n                            onDataReady={ handleDataFromChild }\n                        />\n                    </>:<><Spinner/></>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import { gql, useQuery } from \"@apollo/client\";\n\nconst GET_DETAIL = gql`\nquery ($id: Int) {\n    Media (id: $id, type: ANIME) {\n      id\n      title {\n        english\n        native\n      }\n      description\n      genres\n      isAdult\n      duration\n      chapters\n      startDate {\n        year\n        month\n        day\n      }\n      endDate {\n        year\n        month\n        day\n      }\n      season\n      seasonYear\n      format\n      status\n      episodes\n      duration\n      chapters\n      volumes\n      isAdult\n      genres\n      bannerImage\n    }\n  }\n`\n\nexport const useGetAnimeDetail = (id: string) => {\n    const { data, loading } = useQuery(GET_DETAIL, {\n        variables: { id: parseInt(id) }\n    });\n\n    return { anime: data?.Media, loading };\n}","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/css'\n\nimport Spinner from '../../ components/general/spinner/spinner.component';\n\nimport { useGetAnimeDetail } from '../../hooks/animes/useGetAnimeDetail';\n\ninterface RouteParams {\n    detailId: string;\n}\n\n/* CSS */\nconst Banner = styled.div`\n    display: grid;\n    place-items: start;\n    grid-template-areas: \"inner-div\";\n`\n\nconst Image = styled.img`\n    height: 220px;\n    grid-area: inner-div;\n`\n\nconst StatusLabel = styled.div`\n    grid-area: inner-div;\n    width: fit-content;\n    font-size: 14px;\n    font-weight: 600;\n    padding: 4px 8px;\n    text-align: center;\n    color: #FFFFFF;\n    background: #FFA300;\n    border-radius: 4px 100px 100px 0;\n`\n\nconst Title = styled.div`\n    font-size: 22px;\n    font-weight: 600;\n`\n\nconst SubTitle = styled.div`\n    font-size: 18px;\n    font-weight: 600;\n`\n\nconst AddCollectionButton = styled.div`\n    cursor: pointer;\n    font-size: 14px;\n    font-weight: 600;\n    padding: 10px 15px;\n    border-radius: 10px;\n    background: #003F7E;\n    border: none;\n    color: #fff;\n    &:hover {\n        background: #004890;\n    }\n`\n\nconst BasicInfo = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n`\n\nconst Info = styled.div`\n    font-size: 14px;\n`\n\nconst Detail: React.FC = () => {\n    const { detailId } = useParams<RouteParams>();\n\n    const {anime, loading} = useGetAnimeDetail(detailId);\n\n    const displayDate = (date: any) => {\n        return `${date.month}-${date.year}`\n    }\n\n    return (\n        <div className=\"position-relative pb-5\">\n            {\n                !loading ?\n                <>\n                    <div className=\"container\">\n                        <Banner>\n                            <Image className='img-fluid w-100' src={anime.bannerImage} alt=\"\" />\n                            <StatusLabel>\n                                { anime.status }\n                            </StatusLabel>\n                        </Banner>\n\n                        <div>\n                            <div className=\"mt-4 d-flex\">\n                                <Title className='my-auto'>{anime.title.english}</Title>\n                                <AddCollectionButton className='ml-4'>Add to collection</AddCollectionButton>\n                            </div>\n\n                            <hr className='m-1' />\n                            <SubTitle>{anime.title.native}</SubTitle>\n\n                            {\n                                anime.isAdult ?\n                                <><BasicInfo className={css`margin-top:15px;color: red;`}>18+ ADULT CONTENT</BasicInfo></>:<></>\n                            }\n                            <div className='mt-4'>\n                                <BasicInfo>{anime.duration} minutes/eps</BasicInfo>\n                                <BasicInfo>{displayDate(anime.startDate)} to {displayDate(anime.endDate)}</BasicInfo>\n                            </div>\n\n                            <BasicInfo className='mt-4'>DESCRIPTION:</BasicInfo>\n                            <Info>{anime.description}</Info>\n\n                            <BasicInfo className='mt-4'>EPISODES:</BasicInfo>\n                            <Info>{anime.episodes}</Info>\n\n                            <BasicInfo className='mt-4'>SEASON:</BasicInfo>\n                            <Info>{anime.season}</Info>\n\n                            <BasicInfo className='mt-4'>SEASON YEAR:</BasicInfo>\n                            <Info>{anime.seasonYear}</Info>\n\n                            <BasicInfo className='mt-4'>FORMAT:</BasicInfo>\n                            <Info>{anime.format}</Info>\n                        </div>\n                    </div>\n                </>:<><Spinner/></>\n            }\n        </div>\n    );\n}\n\nexport default Detail;","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: `https://graphql.anilist.co/`,\n    cache: new InMemoryCache()\n});\n\nexport default client;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\n\nimport Header from '../header/header.component';\nimport Home from '../../pages/home/home.page';\nimport Detail from '../../pages/detail/detail.page';\n\nimport '../../common/styles';\nimport client from '../../common/apollo-client';\n\nconst App: React.FC = () => {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/detail/:detailId\" component={Detail}/>\n                </Switch>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './ components/app/app.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}